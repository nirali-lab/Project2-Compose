# Docker Compose configuration for Jenkins CI with Docker-in-Docker (DinD)
version: '3.8'

services:
  # Docker-in-Docker service
  dind:
    image: docker:dind
    privileged: true  # Enables DinD to run Docker commands
    environment:
      DOCKER_TLS_CERTDIR: ""  # Disable TLS for simplicity (enable for production)
    volumes:
      - docker-cache:/var/lib/docker  # Persistent Docker layer cache
    networks:
      - jenkins-net

  # Jenkins service
  jenkins:
    image: jenkins/jenkins:lts
    user: root  # Run as root to access Docker socket
    environment:
      JENKINS_HOME: /var/jenkins_home  # Persistent Jenkins home directory
      JAVA_OPTS: -Djenkins.install.runSetupWizard=false  # Disable setup wizard for automation
    volumes:
      - jenkins-home:/var/jenkins_home  # Jenkins home volume
      - /var/run/docker.sock:/var/run/docker.sock  # Allow Jenkins to access Docker socket
    ports:
      - "8080:8080"  # Jenkins web UI
      - "50000:50000"  # Jenkins agent port
    networks:
      - jenkins-net

networks:
  jenkins-net:
    driver: bridge  # Isolated network for Jenkins and DinD

volumes:
  jenkins-home:  # Persistent storage for Jenkins data
  docker-cache:  # Persistent storage for Docker layer cache

# ------------------ Security Hardening Notes ------------------
# 1. Disable Anonymous Access:
#    - After Jenkins starts, go to Manage Jenkins > Configure Global Security.
#    - Uncheck "Allow anonymous read access".
#
# 2. Create a Non-Admin Pipeline User:
#    - In Jenkins UI: Manage Jenkins > Security > Users > Create a new user.
#    - Assign only necessary permissions (not admin).
#    - Use this user for your pipeline authentication.
#
# --------------------------------------------------------------
